{"version":3,"sources":["utils/auth.js","utils/localStorage.js","utils/mutations.js","pages/SearchBooks.js","utils/queries.js","pages/SavedBooks.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","removeBookId","bookId","savedBookIds","JSON","parse","updatedSavedBookIds","filter","savedBookId","stringify","LOGIN_USER","gql","ADD_USER","SAVE_BOOK","REMOVE_BOOK","i","SearchBooks","useState","searchedBooks","setSearchedBooks","searchInput","setSearchInput","setSavedBookIds","useMutation","saveBook","error","useEffect","bookIdArr","length","handleFormSubmit","event","preventDefault","fetch","response","ok","Error","json","items","bookData","map","book","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","console","handleSaveBook","bookToSave","find","Auth","loggedIn","log","getProfile","data","_id","variables","userId","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","value","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","key","border","Img","src","alt","Body","Title","Text","disabled","some","onClick","QUERY_SAVED","SavedBooks","deletedBookId","useQuery","loading","userData","update","cache","getSingleUser","readQuery","query","writeQuery","savedBooks","deleteBook","handleDeleteBook","SignupForm","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","addUser","handleInputChange","currentTarget","checkValidity","stopPropagation","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","logout","Modal","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","App","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":";yWAgDe,MA5CE,4CAyCd,OAzCc,uCAEf,WACE,OAAOA,IAAOC,KAAKC,cAGrB,sBACA,WAEE,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,KAGzC,4BACA,SAAeA,GACb,IAEE,OADgBH,IAAOG,GACXE,IAAMC,KAAKC,MAAQ,IAG/B,MAAOC,GACP,OAAO,KAEV,sBAED,WAEE,OAAOC,aAAaC,QAAQ,cAC7B,mBAED,SAAMC,GAEJF,aAAaG,QAAQ,WAAYD,GACjCE,OAAOC,SAASC,OAAO,OACxB,oBAED,WAEEN,aAAaO,WAAW,YAExBH,OAAOC,SAASC,OAAO,SACxB,EAzCc,ICYJE,EAAe,SAACC,GAC3B,IAAMC,EAAeV,aAAaC,QAAQ,eACtCU,KAAKC,MAAMZ,aAAaC,QAAQ,gBAChC,KAEJ,IAAKS,EACH,OAAO,EAGT,IAAMG,EAAkC,OAAZH,QAAY,IAAZA,OAAY,EAAZA,EAAcI,QAAO,SAACC,GAAW,OAAKA,IAAgBN,KAGlF,OAFAT,aAAaG,QAAQ,cAAeQ,KAAKK,UAAUH,KAE5C,G,yBC1BII,EAAaC,YAAG,sQAYZC,EAAWD,YAAG,sRAYhBE,EAAYF,YAAG,kSAkBjBG,EAAcH,YAAG,yR,aC3C9B,kmGAAAI,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAQA,I,EA0IeC,EA1IK,WAElB,MAA0CC,mBAAS,IAAG,mBAA/CC,EAAa,KAAEC,EAAgB,KAEtC,EAAsCF,mBAAS,IAAG,mBAA3CG,EAAW,KAAEC,EAAc,KAGlC,EAAwCJ,mBFfnBxB,aAAaC,QAAQ,eACtCU,KAAKC,MAAMZ,aAAaC,QAAQ,gBAChC,IEa+D,mBAA5DS,EAAY,KAAEmB,EAAe,KACpC,EAA8BC,YAAYV,GAAU,mBAA7CW,EAAQ,KAAS,KAALC,MAInBC,qBAAU,WACR,OAAO,WFdgB,IAACC,KEcCxB,GFbbyB,OACZnC,aAAaG,QAAQ,cAAeQ,KAAKK,UAAUkB,IAEnDlC,aAAaO,WAAW,mBEc1B,IAAM6B,EAAgB,uCAAG,WAAOC,GAAK,6EACZ,GAAvBA,EAAMC,iBAEDX,EAAY,CAAD,yCACP,GAAK,gCAIWY,MAAM,iDAAD,OAAkDZ,IAAe,KAAD,EAAE,IAAxFa,EAAQ,QAEAC,GAAG,CAAD,sBACR,IAAIC,MAAM,yBAAyB,KAAD,oBAGlBF,EAASG,OAAO,KAAD,YAA/BC,EAAK,EAALA,MAEFC,EAAWD,EAAME,KAAI,SAACC,GAAI,YAAM,CACpCtC,OAAQsC,EAAKC,GACbC,QAASF,EAAKG,WAAWD,SAAW,CAAC,wBACrCE,MAAOJ,EAAKG,WAAWC,MACvBC,YAAaL,EAAKG,WAAWE,YAC7BC,OAAiC,QAA1B,EAAAN,EAAKG,WAAWI,kBAAU,aAA1B,EAA4BC,YAAa,OAGlD7B,EAAiBmB,GACjBjB,EAAe,IAAI,kDAEnB4B,QAAQxB,MAAM,EAAD,IAAM,0DAEtB,gBA7BqB,sCAgChByB,EAAc,uCAAG,WAAOhD,GAAM,yEAKqB,GAHjDiD,EAAajC,EAAckC,MAAK,SAACZ,GAAI,OAAKA,EAAKtC,SAAWA,KAGlDmD,EAAKC,WAAaD,EAAKnE,WAAa,KAEvC,CAAD,yCACD,GAAK,OAKY,OALZ,SAIZ+D,QAAQM,IAAIF,EAAKG,aAAaC,KAAKC,KACnCT,QAAQM,IAAIJ,GAAY,SACH3B,EAAS,CAC5BmC,UAAU,aAAGC,OAAQP,EAAKG,aAAaC,KAAKC,KAASP,KACpD,KAAD,WAFS,EAAJM,KAGPR,QAAQM,IAAIpD,GACZmB,EAAgB,GAAD,mBAAKnB,GAAY,CAAEgD,EAAWjD,UAAS,kDAEtD+C,QAAQxB,MAAM,EAAD,IAAM,0DAEtB,gBAtBmB,sCAyBpB,OACE,oCACE,kBAACoC,EAAA,EAAS,CAACC,OAAK,EAACC,UAAU,sBACzB,kBAACC,EAAA,EAAS,KACR,iDACA,kBAACC,EAAA,EAAI,CAACC,SAAUrC,GACd,kBAACoC,EAAA,EAAKE,IAAG,KACP,kBAACC,EAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACf,kBAACL,EAAA,EAAKM,QAAO,CACXC,KAAK,cACLC,MAAOrD,EACPsD,SAAU,SAACC,GAAC,OAAKtD,EAAesD,EAAEC,OAAOH,QACzCI,KAAK,OACLC,KAAK,KACLC,YAAY,uBAGhB,kBAACX,EAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GACf,kBAACU,EAAA,EAAM,CAACH,KAAK,SAASI,QAAQ,UAAUH,KAAK,MAAI,sBAS3D,kBAACd,EAAA,EAAS,KACR,4BACG9C,EAAcU,OAAM,kBACNV,EAAcU,OAAM,aAC/B,8BAEN,kBAACsD,EAAA,EAAW,KACThE,EAAcqB,KAAI,SAACC,GAClB,OACE,kBAAC2C,EAAA,EAAI,CAACC,IAAK5C,EAAKtC,OAAQmF,OAAO,QAC5B7C,EAAKM,MACJ,kBAACqC,EAAA,EAAKG,IAAG,CAACC,IAAK/C,EAAKM,MAAO0C,IAAG,wBAAmBhD,EAAKI,OAASqC,QAAQ,QACrE,KACJ,kBAACE,EAAA,EAAKM,KAAI,KACR,kBAACN,EAAA,EAAKO,MAAK,KAAElD,EAAKI,OAClB,uBAAGmB,UAAU,SAAO,YAAWvB,EAAKE,SACpC,kBAACyC,EAAA,EAAKQ,KAAI,KAAEnD,EAAKK,aAChBQ,EAAKC,YACJ,kBAAC0B,EAAA,EAAM,CACLY,SAAsB,OAAZzF,QAAY,IAAZA,OAAY,EAAZA,EAAc0F,MAAK,SAACrF,GAAW,OAAKA,IAAgBgC,EAAKtC,UACnE6D,UAAU,qBACV+B,QAAS,kBAAM5C,EAAeV,EAAKtC,WACtB,OAAZC,QAAY,IAAZA,OAAY,EAAZA,EAAc0F,MAAK,SAACrF,GAAW,OAAKA,IAAgBgC,EAAKtC,WACtD,oCACA,4B,SCpIb6F,EAAcpF,YAAG,gZ,aCD9B,kmGAAAI,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQASA,IAuFeiF,EAvFI,WAGjB,IAGIC,EAHJ,EAAoCC,YAASH,EAAa,CACxDpC,UAAW,CAAEC,OAAQP,EAAKG,aAAaC,KAAKC,OADtCyC,EAAO,EAAPA,QAAeC,EAAQ,EAAd3C,KAIjB,EAAqClC,YAAYT,EAAa,CAC5DuF,OAAM,SAACC,EAAM,GAAqB,EAAnB7C,KAAOxD,aACpB,IACE,IAAQsG,EAAkBD,EAAME,UAAU,CAAEC,MAAOV,IAA3CQ,cAERD,EAAMI,WAAW,CACfD,MAAOV,EACPtC,KAAM,CAAE8C,cAAc,2BAAKA,GAAa,IAAEI,WAAYJ,EAAcI,WAAWpG,QAAO,SAACiC,GAAI,OAAKA,EAAKtC,QAAU+F,UAGjH,MAAOxE,QAIX,mBAdMmF,EAAU,YAAQ,EAALnF,MAAW,EAAJgC,KAeE,OAAR2C,QAAQ,IAARA,KAAUG,cAAcI,WAE1CR,GACFlD,QAAQM,IAAI,YAAa6C,EAASG,cAAcI,YAGlD,IAAME,EAAgB,uCAAG,WAAO3G,GAAM,uEACmB,GAAzCmD,EAAKC,WAAaD,EAAKnE,WAAa,KAEvC,CAAD,yCACD,GAAK,gCAIW0H,EAAW,CAChCjD,UAAW,CAAEC,OAAQP,EAAKG,aAAaC,KAAKC,IAAKxD,YAChD,KAAD,WAFU,EAAJuD,KAKRxD,EAAaC,GACb+F,EAAgB/F,EAAO,kDAEvB+C,QAAQxB,MAAM,EAAD,IAAM,0DAEtB,gBAlBqB,sCAoBtB,OAAI0E,EACK,0CAIP,oCACE,kBAACtC,EAAA,EAAS,CAACC,OAAK,EAACC,UAAU,sBACzB,kBAACC,EAAA,EAAS,KACR,sDAGJ,kBAACA,EAAA,EAAS,KACR,4BACGoC,EAASO,WAAW/E,OAAM,kBACZwE,EAASO,WAAW/E,OAAM,kBAAyC,IAA/BwE,EAASO,WAAW/E,OAAe,OAAS,QAAO,KAClG,4BAEN,kBAACsD,EAAA,EAAW,KACTkB,EAASO,WAAWpE,KAAI,SAACC,GACxB,OACE,kBAAC2C,EAAA,EAAI,CAACC,IAAK5C,EAAKtC,OAAQmF,OAAO,QAC5B7C,EAAKM,MAAQ,kBAACqC,EAAA,EAAKG,IAAG,CAACC,IAAK/C,EAAKM,MAAO0C,IAAG,wBAAmBhD,EAAKI,OAASqC,QAAQ,QAAW,KAChG,kBAACE,EAAA,EAAKM,KAAI,KACR,kBAACN,EAAA,EAAKO,MAAK,KAAElD,EAAKI,OAClB,uBAAGmB,UAAU,SAAO,YAAWvB,EAAKE,SACpC,kBAACyC,EAAA,EAAKQ,KAAI,KAAEnD,EAAKK,aACjB,kBAACmC,EAAA,EAAM,CAACjB,UAAU,uBAAuB+B,QAAS,kBAAMe,EAAiBrE,EAAKtC,UAAQ,8B,kECnFxG,kmGAAAa,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAOA,IA6Ge+F,EA7GI,WAEjB,MAAwC7F,mBAAS,CAAE8F,SAAU,GAAIC,MAAO,GAAIC,SAAU,KAAK,mBAApFC,EAAY,KAAEC,EAAe,KAEpC,EAAoBlG,oBAAS,GAAtBmG,EAA4B,iBAAnB,GAEhB,EAAkCnG,oBAAS,GAAM,mBAA1CoG,EAAS,KAAEC,EAAY,KAE9B,EAA2B/F,YAAYX,GAAS,mBAA1C2G,EAAO,KAAG9F,EAAK,KAALA,MAEhBC,qBAAU,WAEN4F,IADE7F,KAKH,CAACA,IAEJ,IAAM+F,EAAoB,SAAC1F,GACzB,MAAwBA,EAAM8C,OAAtBJ,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACd0C,EAAgB,2BAAKD,GAAY,kBAAG1C,EAAOC,MAGvC5C,EAAgB,uCAAG,WAAOC,GAAK,yEAQlC,OAPDA,EAAMC,kBAIuB,IADhBD,EAAM2F,cACVC,kBACP5F,EAAMC,iBACND,EAAM6F,mBACP,kBAGwBJ,EAAQ,CAC7B5D,UAAU,eAAKuD,KACd,KAAD,WAFMzD,EAAI,EAAJA,KAITR,QAAQM,IAAIE,GACZJ,EAAKuE,MAAMnE,EAAK8D,QAAQpI,OAAO,kDAE5B8D,QAAQxB,MAAM,EAAD,IAAM,QAGvB0F,EAAgB,CACdJ,SAAU,GACVC,MAAO,GACPC,SAAU,KACT,0DACJ,gBA1BqB,sCA4BtB,OACE,oCAEE,kBAAChD,EAAA,EAAI,CAAC4D,YAAU,EAACT,UAAWA,EAAWlD,SAAUrC,GAE/C,kBAACiG,EAAA,EAAK,CAACC,aAAW,EAACC,QAAS,kBAAMV,GAAa,IAAQW,KAAMZ,EAAWpC,QAAQ,UAAQ,0CAIxF,kBAAChB,EAAA,EAAKiE,MAAK,KACT,kBAACjE,EAAA,EAAKkE,MAAK,CAACC,QAAQ,YAAU,YAC9B,kBAACnE,EAAA,EAAKM,QAAO,CACXM,KAAK,OACLE,YAAY,gBACZP,KAAK,WACLE,SAAU8C,EACV/C,MAAOyC,EAAaH,SACpBsB,UAAQ,IAEV,kBAACpE,EAAA,EAAKM,QAAQ+D,SAAQ,CAACzD,KAAK,WAAS,0BAGvC,kBAACZ,EAAA,EAAKiE,MAAK,KACT,kBAACjE,EAAA,EAAKkE,MAAK,CAACC,QAAQ,SAAO,SAC3B,kBAACnE,EAAA,EAAKM,QAAO,CACXM,KAAK,QACLE,YAAY,qBACZP,KAAK,QACLE,SAAU8C,EACV/C,MAAOyC,EAAaF,MACpBqB,UAAQ,IAEV,kBAACpE,EAAA,EAAKM,QAAQ+D,SAAQ,CAACzD,KAAK,WAAS,uBAGvC,kBAACZ,EAAA,EAAKiE,MAAK,KACT,kBAACjE,EAAA,EAAKkE,MAAK,CAACC,QAAQ,YAAU,YAC9B,kBAACnE,EAAA,EAAKM,QAAO,CACXM,KAAK,WACLE,YAAY,gBACZP,KAAK,WACLE,SAAU8C,EACV/C,MAAOyC,EAAaD,SACpBoB,UAAQ,IAEV,kBAACpE,EAAA,EAAKM,QAAQ+D,SAAQ,CAACzD,KAAK,WAAS,0BAEvC,kBAACG,EAAA,EAAM,CACLY,WAAYsB,EAAaH,UAAYG,EAAaF,OAASE,EAAaD,UACxEpC,KAAK,SACLI,QAAQ,WAAS,a,aC5G3B,kmGAAAlE,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAOA,IAyFewH,EAzFG,WAChB,MAAwCtH,mBAAS,CAAE+F,MAAO,GAAIC,SAAU,KAAK,mBAAtEC,EAAY,KAAEC,EAAe,KACpC,EAAoBlG,oBAAS,GAAtBmG,EAA4B,iBAAnB,GAChB,EAAkCnG,oBAAS,GAAM,mBAA1CoG,EAAS,KAAEC,EAAY,KAC9B,EAAyB/F,YAAYb,GAAW,mBAAzCkH,EAAK,KAAGnG,EAAK,KAALA,MAEfC,qBAAU,WAEN4F,IADE7F,KAKH,CAACA,IAEJ,IAAM+F,EAAoB,SAAC1F,GACzB,MAAwBA,EAAM8C,OAAtBJ,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACd0C,EAAgB,2BAAKD,GAAY,kBAAG1C,EAAOC,MAGvC5C,EAAgB,uCAAG,WAAOC,GAAK,yEAQlC,OAPDA,EAAMC,kBAIuB,IADhBD,EAAM2F,cACVC,kBACP5F,EAAMC,iBACND,EAAM6F,mBACP,kBAGsBC,EAAM,CACzBjE,UAAU,eAAKuD,KACd,KAAD,WAFKzD,EAAI,EAAJA,KAIPR,QAAQM,IAAIE,GACZJ,EAAKuE,MAAMnE,EAAKmE,MAAMzI,OAAO,kDAE3B8D,QAAQxB,MAAM,EAAD,IAAI,QAGrB0F,EAAgB,CACdJ,SAAU,GACVC,MAAO,GACPC,SAAU,KACT,0DACJ,gBA1BqB,sCA4BtB,OACE,oCACE,kBAAChD,EAAA,EAAI,CAAC4D,YAAU,EAACT,UAAWA,EAAWlD,SAAUrC,GAC/C,kBAACiG,EAAA,EAAK,CAACC,aAAW,EAACC,QAAS,kBAAMV,GAAa,IAAQW,KAAMZ,EAAWpC,QAAQ,UAAQ,qDAGxF,kBAAChB,EAAA,EAAKiE,MAAK,KACT,kBAACjE,EAAA,EAAKkE,MAAK,CAACC,QAAQ,SAAO,SAC3B,kBAACnE,EAAA,EAAKM,QAAO,CACXM,KAAK,OACLE,YAAY,aACZP,KAAK,QACLE,SAAU8C,EACV/C,MAAOyC,EAAaF,MACpBqB,UAAQ,IAEV,kBAACpE,EAAA,EAAKM,QAAQ+D,SAAQ,CAACzD,KAAK,WAAS,uBAGvC,kBAACZ,EAAA,EAAKiE,MAAK,KACT,kBAACjE,EAAA,EAAKkE,MAAK,CAACC,QAAQ,YAAU,YAC9B,kBAACnE,EAAA,EAAKM,QAAO,CACXM,KAAK,WACLE,YAAY,gBACZP,KAAK,WACLE,SAAU8C,EACV/C,MAAOyC,EAAaD,SACpBoB,UAAQ,IAEV,kBAACpE,EAAA,EAAKM,QAAQ+D,SAAQ,CAACzD,KAAK,WAAS,0BAEvC,kBAACG,EAAA,EAAM,CACLY,WAAYsB,EAAaF,OAASE,EAAaD,UAC/CpC,KAAK,SACLI,QAAQ,WAAS,aCbZuD,GApEG,WAEhB,MAAkCvH,oBAAS,GAAM,mBAA1CwH,EAAS,KAAEC,EAAY,KAE9B,OACE,oCACE,kBAACC,EAAA,EAAM,CAACC,GAAG,OAAO3D,QAAQ,OAAO4D,OAAO,MACtC,kBAAC7E,EAAA,EAAS,CAACF,OAAK,GACd,kBAAC6E,EAAA,EAAOG,MAAK,CAACC,GAAIC,IAAMC,GAAG,KAAG,uBAG9B,kBAACN,EAAA,EAAOO,OAAM,CAACC,gBAAc,WAC7B,kBAACR,EAAA,EAAOS,SAAQ,CAAC3G,GAAG,UAClB,kBAAC4G,EAAA,EAAG,CAACtF,UAAU,WACb,kBAACsF,EAAA,EAAIL,KAAI,CAACD,GAAIC,IAAMC,GAAG,KAAG,oBAIzB5F,EAAKC,WACJ,oCACE,kBAAC+F,EAAA,EAAIL,KAAI,CAACD,GAAIC,IAAMC,GAAG,UAAQ,kBAG/B,kBAACI,EAAA,EAAIL,KAAI,CAAClD,QAASzC,EAAKiG,QAAO,WAGjC,kBAACD,EAAA,EAAIL,KAAI,CAAClD,QAAS,kBAAM4C,GAAa,KAAM,qBAOtD,kBAACa,EAAA,EAAK,CACJzE,KAAK,KACLmD,KAAMQ,EACNe,OAAQ,kBAAMd,GAAa,IAC3Be,kBAAgB,gBAEhB,kBAACC,EAAA,EAAI1F,UAAS,CAAC2F,iBAAiB,SAC9B,kBAACJ,EAAA,EAAMK,OAAM,CAACC,aAAW,GACvB,kBAACN,EAAA,EAAM7D,MAAK,CAACjD,GAAG,gBACd,kBAAC4G,EAAA,EAAG,CAACpE,QAAQ,SACX,kBAACoE,EAAA,EAAIS,KAAI,KACP,kBAACT,EAAA,EAAIL,KAAI,CAACe,SAAS,SAAO,UAE5B,kBAACV,EAAA,EAAIS,KAAI,KACP,kBAACT,EAAA,EAAIL,KAAI,CAACe,SAAS,UAAQ,eAKnC,kBAACR,EAAA,EAAM9D,KAAI,KACT,kBAACiE,EAAA,EAAIM,QAAO,KACV,kBAACN,EAAA,EAAIO,KAAI,CAACF,SAAS,SACjB,kBAAC,EAAS,CAACG,iBAAkB,kBAAMxB,GAAa,OAElD,kBAACgB,EAAA,EAAIO,KAAI,CAACF,SAAS,UACjB,kBAAC,EAAU,CAACG,iBAAkB,kBAAMxB,GAAa,aC7ClDyB,OAff,WACE,OACE,kBAAC,IAAM,KACL,oCACE,kBAAC,GAAM,MACP,kBAAC,IAAM,KACL,kBAAC,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,UAAWtJ,IACjC,kBAAC,IAAK,CAACoJ,OAAK,EAACC,KAAK,SAASC,UAAWtE,IACtC,kBAAC,IAAK,CAACuE,OAAQ,kBAAM,wBAAIxG,UAAU,aAAW,sBCRxDyG,IAASD,OACP,kBAAC,IAAME,WAAU,KACf,kBAAC,GAAG,OAENC,SAASC,eAAe,W","file":"static/js/main.1b4b6454.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","export const getSavedBookIds = () => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : [];\n\n  return savedBookIds;\n};\n\nexport const saveBookIds = (bookIdArr) => {\n  if (bookIdArr.length) {\n    localStorage.setItem('saved_books', JSON.stringify(bookIdArr));\n  } else {\n    localStorage.removeItem('saved_books');\n  }\n};\n\nexport const removeBookId = (bookId) => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : null;\n\n  if (!savedBookIds) {\n    return false;\n  }\n\n  const updatedSavedBookIds = savedBookIds?.filter((savedBookId) => savedBookId !== bookId);\n  localStorage.setItem('saved_books', JSON.stringify(updatedSavedBookIds));\n\n  return true;\n};\n","import gql from 'graphql-tag';\n\nexport const LOGIN_USER = gql`\n    mutation login($email: String!, $password:String!) {\n        login(email: $email, password: $password) {\n            token\n            user {\n                _id\n                username\n            }\n        }\n    }\n    `;\n\n    export const ADD_USER = gql`\n    mutation addUser($username: String!, $email: String!, $password: String!) {\n      addUser(username: $username, email: $email, password: $password) {\n        token\n        user {\n          _id\n          username\n        }\n      }\n    }\n  `;\n\n  export const SAVE_BOOK = gql`\n  mutation saveBook($bookData: BookInput!) {\n    saveBook(bookData: $bookData) {\n      _id\n      username\n      email\n      savedBooks {\n        bookId\n        authors\n        image\n        description\n        title\n        link\n      }\n    }\n  }\n`;\n\nexport const REMOVE_BOOK = gql`\n  mutation removeBook($bookId: ID!) {\n    removeBook(bookId: $bookId) {\n      _id\n      username\n      email\n      savedBooks {\n        bookId\n        authors\n        image\n        description\n        title\n        link\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport { useMutation } from '@apollo/react-hooks';\nimport { SAVE_BOOK } from '../utils/mutations';\n\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchInput}`);;\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      console.log(Auth.getProfile().data._id);\n      console.log(bookToSave);\n      const {data} = await saveBook({\n        variables: { userId: Auth.getProfile().data._id , ...bookToSave}\n      });\n      console.log(savedBookIds);\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","import { gql } from '@apollo/client' \n\nexport const QUERY_SAVED = gql`\n    query getSingleUser($username: String, $userId: ID!) {\n        getSingleUser(username: $username, userId: $userId) {\n            _id\n            username\n            savedBooks {\n                title\n                link\n                image\n                description\n                bookId\n                authors\n            }\n        } \n    }\n    `;","import React from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_SAVED } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\n\nconst SavedBooks = () => {\n  // const [userData, setUserData] = useState({});\n  // use this to determine if `useEffect()` hook needs to run again\n  const { loading, data: userData } = useQuery(QUERY_SAVED, {\n    variables: { userId: Auth.getProfile().data._id }\n  });\n  let deletedBookId;\n  const [ deleteBook, {error, data}] = useMutation(REMOVE_BOOK, {\n    update(cache, {data: {removeBookId}}) {\n      try {\n        const { getSingleUser } = cache.readQuery({ query: QUERY_SAVED });\n\n        cache.writeQuery({\n          query: QUERY_SAVED,\n          data: { getSingleUser: {...getSingleUser, savedBooks: getSingleUser.savedBooks.filter((book) => book.bookId != deletedBookId)}}\n        })\n        \n      } catch (error) {\n        \n      }\n    }\n  });\n  const userDataBooks = userData?.getSingleUser.savedBooks || []\n\n  if(!loading){\n    console.log(\"user data\", userData.getSingleUser.savedBooks);\n  }\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await deleteBook({\n        variables: { userId: Auth.getProfile().data._id, bookId },\n      });\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n      deletedBookId = bookId;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation } from '@apollo/react-hooks'\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const[addUser, {error }] = useMutation(ADD_USER);\n\n  useEffect(()=> {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error])\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: {...userFormData},\n      });\n\n     console.log(data);\n     Auth.login(data.addUser.token);\n      } catch(err){\n        console.error(err);\n      }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","// see SignupForm.js for comments\nimport React, { useState, useEffect  } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [login, {error}] = useMutation(LOGIN_USER);\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false)\n    }\n  }, [error]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const {data} = await login({\n        variables: {...userFormData},\n      });\n\n      console.log(data)\n      Auth.login(data.login.token);\n      } catch (e){\n        console.error(e);\n      }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Google Books Search\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Books\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport SearchBooks from './pages/SearchBooks';\nimport SavedBooks from './pages/SavedBooks';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <Router>\n      <>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={SearchBooks} />\n          <Route exact path='/saved' component={SavedBooks} />\n          <Route render={() => <h1 className='display-2'>Wrong page!</h1>} />\n        </Switch>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}